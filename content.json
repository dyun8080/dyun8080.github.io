{"pages":[{"title":"custom","text":"在那段时间的最后一天。一样的时间，再次坐上同一辆车，这一次，我不会再错过她了 Quick Starttodo如何自定义样式自定义插件","link":"/about/index.html"}],"posts":[{"title":"Quokka","text":"Quokka.js 是 JavaScript 和 TypeScript 的快速原型操作平台。它会在您键入时立即运行代码，并在代码编辑器中显示各种执行结果 简单的来说，它就是可以让我们开发者们最小程度的进行快速小 demo 的工具 官方简介：Quokka.js is a rapid prototyping playground for JavaScript and TypeScript. It runs your code immediately as you type and displays various execution results in your code editor. https://quokkajs.com/ 快速开始下载插件在 vscode 中的插件管理中可以直接下载 Quokka.js 使用 在 vscode 编辑器中按 F1，输入 New JavaScript File 编写你的 JavaScript 代码 官方demo： 使用感受很适合输出小 demo默认使用当前的 node 环境，可以通过插件（jsdom-quokka-plugin）拓展到 window 对象不需要保存就可以看到任何一段代码的输出，真的不要太快，很类似速写笔记本。 直观比 debug 更加直观的体现每行代码 绿色方块：行尚未执行 灰色方块：执行通过 黄色方块：仅部分执行 红色方块：源行是错误的来源，或者是错误的堆栈 清晰和浏览器控制台一样的展开效果，对比与 node debug 要清晰 存在的问题代码会自动通过 babel 去编译，这个可能不是开发者们想要的，比如 123import fs from 'fs'console.log(fs) 这个不会报错，但是通过原生 node 下是无法直接执行的 社区版和 Pro 版未付费的情况下，只能使用的是社区版。功能有限，比如无法导入其他模块，Pro 强大一点，但是要花掉几十块大洋。 参考TDD（测试驱动开发）是否已死？","link":"/2019/01/21/quokka-js/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2018/12/07/hello-world/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455const puppeteer = require('puppeteer');const fs = require('fs');init();async function init() { // 创建浏览器，打开一个 page const browser = await puppeteer.launch(); const page = await browser.newPage(); // 访问 url await page.goto('http://localhost:3000/'); /** * 开启 CSS Coverage 功能 * @see https://zhaoqize.github.io/puppeteer-api-zh_CN/#?product=Puppeteer&amp;version=v1.11.0&amp;show=api-coveragestartcsscoverageoptions */ await page.coverage.startCSSCoverage(); // 录入用户交互 // await page.hover('.section'); // 停止收集并得到 cssCoverage // cssCoverage 是个数组，包含每个被引用的 css 文件 const cssCoverage = await page.coverage.stopCSSCoverage(); // 调查 CSS Coverage并提取使用过的 CSS let cssUsedBytes = 0; let cssTotalBytes = 0; let coveredCssString = ''; cssCoverage.forEach((item) =&gt; { const { ranges, text } = item; cssTotalBytes += text.length; // ranges 数组中标记了每一个使用过的 class ranges.forEach((range) =&gt; { cssUsedBytes += range.end - range.start; coveredCssString += `${text.slice(range.start, range.end)}\\n`; }); }); console.log(`总大小: ${cssTotalBytes}`); console.log(`使用到的大小: ${cssUsedBytes}`); fs.writeFile('./style.css', coveredCssString, (err) =&gt; { if (err) { return console.log(err); } console.log('样式文件导出成功 ✌️!'); }); await browser.close();} More info: Deployment","link":"/2018/12/07/test-01/"},{"title":"custom","text":"在那段时间的最后一天。一样的时间，再次坐上同一辆车，这一次，我不会再错过她了 Quick Starttodo如何自定义样式自定义插件","link":"/2018/12/07/custom/"},{"title":"跨域资源共享","text":"CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定Access-Control-Allow-Credentials字段。 1Access-Control-Allow-Credentials: true","link":"/2019/01/19/跨域资源共享/"}],"tags":[{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"单元测试","slug":"单元测试","link":"/tags/单元测试/"},{"name":"测试驱动开发","slug":"测试驱动开发","link":"/tags/测试驱动开发/"}],"categories":[{"name":"utils","slug":"utils","link":"/categories/utils/"},{"name":"ajax","slug":"ajax","link":"/categories/ajax/"},{"name":"vscode","slug":"utils/vscode","link":"/categories/utils/vscode/"},{"name":"damao","slug":"ajax/damao","link":"/categories/ajax/damao/"}]}